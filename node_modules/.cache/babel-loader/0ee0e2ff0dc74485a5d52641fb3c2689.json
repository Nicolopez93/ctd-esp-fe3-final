{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicolas\\\\Desktop\\\\fe3-final\\\\src\\\\Routes\\\\Favs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../Components/Card/Card\";\nimport { useContextGlobal } from \"../utils/global.context\"; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContextGlobal();\n  useEffect(() => {\n    const storedFavs = JSON.parse(localStorage.getItem('favs')) || [];\n    setFavCards(storedFavs);\n  }, []);\n\n  const handeleDelete = id => {\n    // Filtrar las tarjetas para eliminar la tarjeta con el id\n    const updatedCards = favCards.filter(card => card.id !== id); // Actualizar el estado favCards con las tarjetas filtradas\n\n    setFavCards(updatedCards); // Actualizar el almacenamiento local con las tarjetas filtradas\n\n    localStorage.setItem('favs', JSON.stringify(updatedCards));\n    alert('Se eliminó el Dentista de favoritos');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `favs ${theme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dentistas Favoritos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: favCards.map(_ref => {\n          let {\n            id,\n            name,\n            username\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            id: id,\n            name: name,\n            username: username,\n            onDelete: () => handeleDelete(id)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Favs, \"04EoCDQvJ6SD0Xgi13VJ5Vg7RNA=\", false, function () {\n  return [useContextGlobal];\n});\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useEffect","useState","Card","useContextGlobal","Favs","state","dispatch","storedFavs","JSON","parse","localStorage","getItem","setFavCards","handeleDelete","id","updatedCards","favCards","filter","card","setItem","stringify","alert","theme","map","name","username"],"sources":["C:/Users/nicolas/Desktop/fe3-final/src/Routes/Favs.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../Components/Card/Card\";\r\nimport { useContextGlobal } from \"../utils/global.context\";\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Favs = () => {\r\n  \r\n  const { state, dispatch } = useContextGlobal();\r\n\r\n\r\n  useEffect(() => {\r\n    const storedFavs = JSON.parse(localStorage.getItem('favs')) || [];\r\n    setFavCards(storedFavs);\r\n  }, []);\r\n\r\n  const handeleDelete = (id) => {\r\n    // Filtrar las tarjetas para eliminar la tarjeta con el id\r\n    const updatedCards = favCards.filter(card => card.id !== id);\r\n    // Actualizar el estado favCards con las tarjetas filtradas\r\n    setFavCards(updatedCards);\r\n     // Actualizar el almacenamiento local con las tarjetas filtradas\r\n    localStorage.setItem('favs', JSON.stringify(updatedCards));\r\n    alert('Se eliminó el Dentista de favoritos');\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className={`favs ${theme}`}>\r\n      <h1>Dentistas Favoritos</h1>\r\n        <div className=\"card-grid\">\r\n          {favCards.map(({ id, name, username }) => (\r\n          <Card key={id} id={id} name={name} username={username} onDelete={() => handeleDelete(id)}/>\r\n          ))}\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favs;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,gBAAT,QAAiC,yBAAjC,C,CAEA;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBH,gBAAgB,EAA5C;EAGAH,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAA/D;IACAC,WAAW,CAACL,UAAD,CAAX;EACD,CAHQ,EAGN,EAHM,CAAT;;EAKA,MAAMM,aAAa,GAAIC,EAAD,IAAQ;IAC5B;IACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAApC,CAArB,CAF4B,CAG5B;;IACAF,WAAW,CAACG,YAAD,CAAX,CAJ4B,CAK3B;;IACDL,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeL,YAAf,CAA7B;IACAM,KAAK,CAAC,qCAAD,CAAL;EACD,CARD;;EAUA,oBACE;IAAA,uBACA;MAAK,SAAS,EAAG,QAAOC,KAAM,EAA9B;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEI;QAAK,SAAS,EAAC,WAAf;QAAA,UACGN,QAAQ,CAACO,GAAT,CAAa;UAAA,IAAC;YAAET,EAAF;YAAMU,IAAN;YAAYC;UAAZ,CAAD;UAAA,oBACd,QAAC,IAAD;YAAe,EAAE,EAAEX,EAAnB;YAAuB,IAAI,EAAEU,IAA7B;YAAmC,QAAQ,EAAEC,QAA7C;YAAuD,QAAQ,EAAE,MAAMZ,aAAa,CAACC,EAAD;UAApF,GAAWA,EAAX;YAAA;YAAA;YAAA;UAAA,QADc;QAAA,CAAb;MADH;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADF;AAYD,CAhCD;;GAAMV,I;UAEwBD,gB;;;KAFxBC,I;AAkCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}